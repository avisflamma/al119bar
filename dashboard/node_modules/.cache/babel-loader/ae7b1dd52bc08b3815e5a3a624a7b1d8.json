{"ast":null,"code":"import axios from \"axios\";\nimport { PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_LIST_FAIL } from \"../Constants/ProductConstants\";\nimport { logout } from \"./userActions\"; // ALL USER\n\nexport const listProducts = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_LIST_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/products/all`, config);\n    dispatch({\n      type: PRODUCT_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === \"Not authorized, token failed\") {\n      dispatch(logout());\n    }\n\n    dispatch({\n      type: PRODUCT_LIST_FAIL,\n      payload: message\n    });\n  }\n};","map":{"version":3,"sources":["/var/www/html/al119bar/dashboard/src/Redux/Actions/ProductActions.js"],"names":["axios","PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","logout","listProducts","dispatch","getState","type","userLogin","userInfo","config","headers","Authorization","token","data","get","payload","error","message","response"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACCC,oBADD,EAECC,oBAFD,EAGCC,iBAHD,QAIO,+BAJP;AAKA,SAASC,MAAT,QAAuB,eAAvB,C,CAIA;;AACA,OAAO,MAAMC,YAAY,GAAG,MAAM,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AAE5D,MAAI;AACFD,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAEP;AAAR,KAAD,CAAR;AAEA,UAAM;AACJQ,MAAAA,SAAS,EAAG;AAAEC,QAAAA;AAAF;AADR,QAEHH,QAAQ,EAFX;AAIA,UAAMI,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAE,UAASH,QAAQ,CAACI,KAAM;AADhC;AADI,KAAf;AAMA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMf,KAAK,CAACgB,GAAN,CAAW,mBAAX,EAA+BL,MAA/B,CAAvB;AAEAL,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAEN,oBAAR;AAA8Be,MAAAA,OAAO,EAAEF;AAAvC,KAAD,CAAR;AAED,GAjBD,CAiBE,OAAOG,KAAP,EAAc;AACd,UAAMC,OAAO,GACXD,KAAK,CAACE,QAAN,IAAkBF,KAAK,CAACE,QAAN,CAAeL,IAAf,CAAoBI,OAAtC,GACID,KAAK,CAACE,QAAN,CAAeL,IAAf,CAAoBI,OADxB,GAEID,KAAK,CAACC,OAHZ;;AAIA,QAAIA,OAAO,KAAK,8BAAhB,EAAgD;AAC9Cb,MAAAA,QAAQ,CAACF,MAAM,EAAP,CAAR;AACD;;AACDE,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAEL,iBADC;AAEPc,MAAAA,OAAO,EAAEE;AAFF,KAAD,CAAR;AAID;AACF,CAhCI","sourcesContent":["import axios from \"axios\";\nimport {\n PRODUCT_LIST_REQUEST,\n PRODUCT_LIST_SUCCESS,\n PRODUCT_LIST_FAIL\n} from \"../Constants/ProductConstants\";\nimport { logout } from \"./userActions\";\n\n\n\n// ALL USER\nexport const listProducts = () => async (dispatch, getState) => {\n\n    try {\n      dispatch({ type: PRODUCT_LIST_REQUEST });\n  \n      const {\n        userLogin : { userInfo },\n      }= getState();\n  \n      const config = {\n        headers: {\n          Authorization:`Bearer ${userInfo.token}`,\n        },\n      };\n  \n      const { data } = await axios.get(`/api/products/all`, config);\n  \n      dispatch({ type: PRODUCT_LIST_SUCCESS, payload: data });\n  \n    } catch (error) {\n      const message =\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message;\n      if (message === \"Not authorized, token failed\") {\n        dispatch(logout());\n      }\n      dispatch({\n        type: PRODUCT_LIST_FAIL,\n        payload: message,\n      });\n    }\n  };"]},"metadata":{},"sourceType":"module"}