{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { userLoginReducer, userListReducer } from \"./Reducers/userReducers\";\nimport { productListReducer } from \"./Reducers/ProductReducers\";\nconst reducer = combineReducers({\n  userLogin: userLoginReducer,\n  userList: userListReducer,\n  productList: productListReducer\n}); // login\n\nconst userInfoFromLocalStorage = localStorage.getItem(\"userInfo\") ? JSON.parse(localStorage.getItem(\"userInfo\")) : null;\nconst initialState = {\n  userLogin: {\n    userInfo: userInfoFromLocalStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["/var/www/html/al119bar/dashboard/src/Redux/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","userLoginReducer","userListReducer","productListReducer","reducer","userLogin","userList","productList","userInfoFromLocalStorage","localStorage","getItem","JSON","parse","initialState","userInfo","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,gBAAT,EAA4BC,eAA5B,QAAmD,yBAAnD;AACA,SAASC,kBAAT,QAAmC,4BAAnC;AAEA,MAAMC,OAAO,GAAGP,eAAe,CAAC;AAC9BQ,EAAAA,SAAS,EAAEJ,gBADmB;AAE9BK,EAAAA,QAAQ,EAAGJ,eAFmB;AAG9BK,EAAAA,WAAW,EAAEJ;AAHiB,CAAD,CAA/B,C,CAMA;;AACA,MAAMK,wBAAwB,GAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,IAC7BC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAD6B,GAE7B,IAFJ;AAIA,MAAMG,YAAY,GAAG;AACnBR,EAAAA,SAAS,EAAE;AAAES,IAAAA,QAAQ,EAAEN;AAAZ;AADQ,CAArB;AAIA,MAAMO,UAAU,GAAG,CAAChB,KAAD,CAAnB;AAEA,MAAMiB,KAAK,GAAGpB,WAAW,CACvBQ,OADuB,EAEvBS,YAFuB,EAGvBb,mBAAmB,CAACF,eAAe,CAAC,GAAGiB,UAAJ,CAAhB,CAHI,CAAzB;AAMA,eAAeC,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport { userLoginReducer , userListReducer } from \"./Reducers/userReducers\";\r\nimport { productListReducer } from \"./Reducers/ProductReducers\";\r\n\r\nconst reducer = combineReducers({\r\n  userLogin: userLoginReducer,\r\n  userList : userListReducer,\r\n  productList: productListReducer\r\n});\r\n\r\n// login\r\nconst userInfoFromLocalStorage = localStorage.getItem(\"userInfo\")\r\n  ? JSON.parse(localStorage.getItem(\"userInfo\"))\r\n  : null;\r\n\r\nconst initialState = {\r\n  userLogin: { userInfo: userInfoFromLocalStorage },\r\n};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n"]},"metadata":{},"sourceType":"module"}