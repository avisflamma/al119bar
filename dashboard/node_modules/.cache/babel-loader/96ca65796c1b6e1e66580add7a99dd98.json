{"ast":null,"code":"import axios from \"axios\";\nimport { CATEGORY_LIST_REQUEST, CATEGORY_LIST_SUCCESS, CATEGORY_LIST_FAIL, CATEGORY_DELETE_REQUEST, CATEGORY_DELETE_SUCCESS, CATEGORY_DELETE_FAIL, CATEGORY_CREATE_REQUEST, CATEGORY_CREATE_SUCCESS, CATEGORY_CREATE_FAIL, CATEGORY_EDIT_REQUEST, CATEGORY_EDIT_SUCCESS, CATEGORY_EDIT_FAIL, CATEGORY_UPDATE_REQUEST, CATEGORY_UPDATE_SUCCESS, CATEGORY_UPDATE_FAIL } from \"../Constants/CategoryConstants\";\nimport { logout } from \"./userActions\"; // ALL ADMIN CATEGORIES\n\nexport const listCategories = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: CATEGORY_LIST_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/categories/all`, config);\n    dispatch({\n      type: CATEGORY_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === \"Not authorized, token failed\") {\n      dispatch(logout());\n    }\n\n    dispatch({\n      type: CATEGORY_LIST_FAIL,\n      payload: message\n    });\n  }\n}; // DELETE ADMIN CATEGORY\n\nexport const deleteCategory = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: CATEGORY_DELETE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    await axios.delete(`/api/categories/${id}`, config);\n    dispatch({\n      type: CATEGORY_DELETE_SUCCESS\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === \"Not authorized, token failed\") {\n      dispatch(logout());\n    }\n\n    dispatch({\n      type: CATEGORY_DELETE_FAIL,\n      payload: message\n    });\n  }\n}; // CREATE CATEGORY\n\nexport const createCategory = (isEnabled, title, categoryBanner, categoryUrl) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: CATEGORY_CREATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.post(`/api/categories/`, {\n      isEnabled,\n      title,\n      categoryBanner,\n      categoryUrl\n    }, config);\n    dispatch({\n      type: CATEGORY_CREATE_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: CATEGORY_EDIT_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: CATEGORY_UPDATE_REQUEST\n    });\n    dispatch(listCategories());\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === \"Not authorized, token failed\") {\n      dispatch(logout());\n    }\n\n    dispatch({\n      type: CATEGORY_CREATE_FAIL,\n      payload: message\n    });\n  }\n}; // EDIT CATEGORY\n\nexport const editCategory = id => async dispatch => {\n  try {\n    dispatch({\n      type: CATEGORY_EDIT_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/categories/${id}`);\n    dispatch({\n      type: CATEGORY_EDIT_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === \"Not authorized, token failed\") {\n      dispatch(logout());\n    }\n\n    dispatch({\n      type: CATEGORY_EDIT_FAIL,\n      payload: message\n    });\n  }\n}; // UPDATE CATEGORY\n\nexport const updateCategory = category => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: CATEGORY_UPDATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/categories/${category._id}`, category, config);\n    dispatch({\n      type: CATEGORY_UPDATE_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: CATEGORY_EDIT_SUCCESS,\n      payload: data\n    });\n    dispatch(listCategories());\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === \"Not authorized, token failed\") {\n      dispatch(logout());\n    }\n\n    dispatch({\n      type: CATEGORY_UPDATE_FAIL,\n      payload: message\n    });\n  }\n};","map":{"version":3,"sources":["/var/www/html/al119bar/dashboard/src/Redux/Actions/CategoryActions.js"],"names":["axios","CATEGORY_LIST_REQUEST","CATEGORY_LIST_SUCCESS","CATEGORY_LIST_FAIL","CATEGORY_DELETE_REQUEST","CATEGORY_DELETE_SUCCESS","CATEGORY_DELETE_FAIL","CATEGORY_CREATE_REQUEST","CATEGORY_CREATE_SUCCESS","CATEGORY_CREATE_FAIL","CATEGORY_EDIT_REQUEST","CATEGORY_EDIT_SUCCESS","CATEGORY_EDIT_FAIL","CATEGORY_UPDATE_REQUEST","CATEGORY_UPDATE_SUCCESS","CATEGORY_UPDATE_FAIL","logout","listCategories","dispatch","getState","type","userLogin","userInfo","config","headers","Authorization","token","data","get","payload","error","message","response","deleteCategory","id","delete","createCategory","isEnabled","title","categoryBanner","categoryUrl","post","editCategory","updateCategory","category","put","_id"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport {\n CATEGORY_LIST_REQUEST,\n CATEGORY_LIST_SUCCESS,\n CATEGORY_LIST_FAIL,\n CATEGORY_DELETE_REQUEST,\n CATEGORY_DELETE_SUCCESS,\n CATEGORY_DELETE_FAIL,\n CATEGORY_CREATE_REQUEST,\n CATEGORY_CREATE_SUCCESS,\n CATEGORY_CREATE_FAIL,\n CATEGORY_EDIT_REQUEST,\n CATEGORY_EDIT_SUCCESS,\n CATEGORY_EDIT_FAIL,\n CATEGORY_UPDATE_REQUEST,\n CATEGORY_UPDATE_SUCCESS,\n CATEGORY_UPDATE_FAIL\n} from \"../Constants/CategoryConstants\";\nimport { logout } from \"./userActions\";\n\n\n\n// ALL ADMIN CATEGORIES\nexport const listCategories = () => async (dispatch, getState) => {\n  try {\n    dispatch({ type: CATEGORY_LIST_REQUEST });\n\n    const {\n      userLogin : { userInfo },\n    }= getState();\n\n    const config = {\n      headers: {\n        Authorization:`Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.get(`/api/categories/all`, config);\n\n    dispatch({ type: CATEGORY_LIST_SUCCESS, payload: data });\n\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    if (message === \"Not authorized, token failed\") {\n      dispatch(logout());\n    }\n    dispatch({\n      type: CATEGORY_LIST_FAIL,\n      payload: message,\n    });\n  }\n};\n\n// DELETE ADMIN CATEGORY\nexport const deleteCategory = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: CATEGORY_DELETE_REQUEST });\n\n    const {\n      userLogin : { userInfo },\n    }= getState();\n\n    const config = {\n      headers: {\n        Authorization:`Bearer ${userInfo.token}`,\n      },\n    };\n\n    await axios.delete(`/api/categories/${id}`, config);\n\n    dispatch({ type: CATEGORY_DELETE_SUCCESS });\n\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    if (message === \"Not authorized, token failed\") {\n      dispatch(logout());\n    }\n    dispatch({\n      type: CATEGORY_DELETE_FAIL,\n      payload: message,\n    });\n  }\n};\n\n\n// CREATE CATEGORY\nexport const createCategory = (isEnabled,title,categoryBanner,categoryUrl) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: CATEGORY_CREATE_REQUEST });\n\n    const {\n      userLogin : { userInfo },\n    }= getState();\n\n    const config = {\n      headers: {\n        Authorization:`Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.post(`/api/categories/`,{isEnabled,title,categoryBanner,categoryUrl}, config);\n\n    dispatch({ type: CATEGORY_CREATE_SUCCESS, payload: data });\n    dispatch({ type: CATEGORY_EDIT_SUCCESS, payload: data });\n    dispatch({ type: CATEGORY_UPDATE_REQUEST });\n\n    dispatch(listCategories());\n\n\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    if (message === \"Not authorized, token failed\") {\n      dispatch(logout());\n    }\n    dispatch({\n      type: CATEGORY_CREATE_FAIL,\n      payload: message,\n    });\n  }\n};\n\n\n// EDIT CATEGORY\nexport const editCategory = (id) => async (dispatch) => {\n  try {\n    dispatch({ type: CATEGORY_EDIT_REQUEST });\n    const { data } = await axios.get(`/api/categories/${id}`);\n    dispatch({ type: CATEGORY_EDIT_SUCCESS, payload: data });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    if (message === \"Not authorized, token failed\") {\n      dispatch(logout());\n    }\n    dispatch({\n      type: CATEGORY_EDIT_FAIL,\n      payload: message,\n    });\n  }\n};\n\n\n// UPDATE CATEGORY\nexport const updateCategory = \n  (category) => \n  async (dispatch, getState) => {\n    try {\n      dispatch({ type: CATEGORY_UPDATE_REQUEST });\n\n      const {\n        userLogin : { userInfo },\n      }= getState();\n\n      const config = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization:`Bearer ${userInfo.token}`,\n        },\n      };\n\n      const { data } = await axios.put(\n        `/api/categories/${category._id}`,\n        category, \n        config\n      );\n\n      dispatch({ type: CATEGORY_UPDATE_SUCCESS, payload: data });\n      dispatch({ type: CATEGORY_EDIT_SUCCESS, payload: data });\n      dispatch(listCategories());\n\n    } catch (error) {\n      const message =\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message;\n      if (message === \"Not authorized, token failed\") {\n        dispatch(logout());\n      }\n      dispatch({\n        type: CATEGORY_UPDATE_FAIL,\n        payload: message,\n      });\n    }\n  };"]},"metadata":{},"sourceType":"module"}