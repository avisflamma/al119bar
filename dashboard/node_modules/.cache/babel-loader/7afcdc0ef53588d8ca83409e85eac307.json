{"ast":null,"code":"var _jsxFileName = \"/var/www/html/al119bar/dashboard/src/components/Categories/CreateCategory.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Form extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const {\n        editMode,\n        post\n      } = this.props;\n      const title = this.titleRef.value;\n      const body = this.bodyRef.value;\n\n      if (editMode) {\n        const data = {\n          title,\n          body\n        };\n        this.props.dispatch({\n          type: 'UPDATE',\n          id: post.id,\n          data\n        });\n      } else {\n        const data = {\n          id: new Date(),\n          title,\n          message,\n          editing: false\n        };\n        this.props.dispatch({\n          type: 'ADD_POST',\n          data\n        });\n      }\n    };\n  }\n\n  render() {\n    const {\n      editMode,\n      post\n    } = this.props;\n    const pageTitle = editMode ? 'Edit Post' : 'Create Post';\n    const buttonTitle = editMode ? 'Update' : 'Post';\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: pageTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          required: true,\n          type: \"text\",\n          ref: input => this.titleRef = input,\n          placeholder: \"Enter Post Title\",\n          defaultValue: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          required: true,\n          rows: \"5\",\n          ref: input => this.bodyRef = input,\n          cols: \"28\",\n          placeholder: \"Enter Post\",\n          defaultValue: post.body\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: buttonTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nForm.propTypes = {\n  editMode: PropTypes.bool,\n  post: PropTypes.object\n};\nForm.defaultProps = {\n  editMode: false,\n  // false: Create mode, true: Edit mode\n  post: {\n    title: \"\",\n    body: \"\"\n  } // Pass defined Post object in create mode in order not to get undefined objects in 'defaultValue's of inputs.\n\n};\nexport default Form;","map":{"version":3,"sources":["/var/www/html/al119bar/dashboard/src/components/Categories/CreateCategory.js"],"names":["React","Component","PropTypes","Form","handleSubmit","e","preventDefault","editMode","post","props","title","titleRef","value","body","bodyRef","data","dispatch","type","id","Date","message","editing","render","pageTitle","buttonTitle","input","propTypes","bool","object","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AAEA,MAAMC,IAAN,SAAmBF,SAAnB,CAA6B;AAAA;AAAA;;AAAA,SACzBG,YADyB,GACVC,CAAC,IAAI;AAChBA,MAAAA,CAAC,CAACC,cAAF;AACA,YAAM;AAACC,QAAAA,QAAD;AAAWC,QAAAA;AAAX,UAAmB,KAAKC,KAA9B;AACA,YAAMC,KAAK,GAAG,KAAKC,QAAL,CAAcC,KAA5B;AACA,YAAMC,IAAI,GAAG,KAAKC,OAAL,CAAaF,KAA1B;;AACA,UAAIL,QAAJ,EAAa;AACT,cAAMQ,IAAI,GAAG;AACTL,UAAAA,KADS;AAETG,UAAAA;AAFS,SAAb;AAIA,aAAKJ,KAAL,CAAWO,QAAX,CAAoB;AAACC,UAAAA,IAAI,EAAE,QAAP;AAAiBC,UAAAA,EAAE,EAAEV,IAAI,CAACU,EAA1B;AAA8BH,UAAAA;AAA9B,SAApB;AACH,OAND,MAOK;AACD,cAAMA,IAAI,GAAG;AACTG,UAAAA,EAAE,EAAE,IAAIC,IAAJ,EADK;AAETT,UAAAA,KAFS;AAGTU,UAAAA,OAHS;AAITC,UAAAA,OAAO,EAAE;AAJA,SAAb;AAMA,aAAKZ,KAAL,CAAWO,QAAX,CAAoB;AAACC,UAAAA,IAAI,EAAE,UAAP;AAAmBF,UAAAA;AAAnB,SAApB;AACH;AACJ,KAtBwB;AAAA;;AAwBzBO,EAAAA,MAAM,GAAG;AACL,UAAM;AAACf,MAAAA,QAAD;AAAWC,MAAAA;AAAX,QAAmB,KAAKC,KAA9B;AACA,UAAMc,SAAS,GAAGhB,QAAQ,GAAG,WAAH,GAAiB,aAA3C;AACA,UAAMiB,WAAW,GAAGjB,QAAQ,GAAG,QAAH,GAAc,MAA1C;AACA,wBACI;AAAA,8BACI;AAAA,kBAAKgB;AAAL;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAM,QAAA,QAAQ,EAAE,KAAKnB,YAArB;AAAA,gCACI;AACI,UAAA,QAAQ,MADZ;AAEI,UAAA,IAAI,EAAC,MAFT;AAGI,UAAA,GAAG,EAAEqB,KAAK,IAAI,KAAKd,QAAL,GAAgBc,KAHlC;AAII,UAAA,WAAW,EAAC,kBAJhB;AAKI,UAAA,YAAY,EAAEjB,IAAI,CAACE;AALvB;AAAA;AAAA;AAAA;AAAA,gBADJ,eAQI;AACI,UAAA,QAAQ,MADZ;AAEI,UAAA,IAAI,EAAC,GAFT;AAGI,UAAA,GAAG,EAAEe,KAAK,IAAI,KAAKX,OAAL,GAAeW,KAHjC;AAII,UAAA,IAAI,EAAC,IAJT;AAKI,UAAA,WAAW,EAAC,YALhB;AAMI,UAAA,YAAY,EAAEjB,IAAI,CAACK;AANvB;AAAA;AAAA;AAAA;AAAA,gBARJ,eAgBI;AAAA,oBAASW;AAAT;AAAA;AAAA;AAAA;AAAA,gBAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAuBH;;AAnDwB;;AAsD7BrB,IAAI,CAACuB,SAAL,GAAiB;AACbnB,EAAAA,QAAQ,EAAEL,SAAS,CAACyB,IADP;AAEbnB,EAAAA,IAAI,EAAEN,SAAS,CAAC0B;AAFH,CAAjB;AAKAzB,IAAI,CAAC0B,YAAL,GAAoB;AAChBtB,EAAAA,QAAQ,EAAE,KADM;AACI;AACpBC,EAAAA,IAAI,EAAE;AACFE,IAAAA,KAAK,EAAE,EADL;AAEFG,IAAAA,IAAI,EAAE;AAFJ,GAFU,CAKX;;AALW,CAApB;AAQA,eAAeV,IAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Form extends Component {\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        const {editMode, post} = this.props;\r\n        const title = this.titleRef.value;\r\n        const body = this.bodyRef.value;\r\n        if (editMode){\r\n            const data = {\r\n                title,\r\n                body\r\n            }\r\n            this.props.dispatch({type: 'UPDATE', id: post.id, data})\r\n        }\r\n        else {\r\n            const data = {\r\n                id: new Date(),\r\n                title,\r\n                message,\r\n                editing: false\r\n            }\r\n            this.props.dispatch({type: 'ADD_POST', data});\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {editMode, post} = this.props;\r\n        const pageTitle = editMode ? 'Edit Post' : 'Create Post';\r\n        const buttonTitle = editMode ? 'Update' : 'Post';\r\n        return (\r\n            <div>\r\n                <h1>{pageTitle}</h1>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <input\r\n                        required\r\n                        type=\"text\"\r\n                        ref={input => this.titleRef = input}\r\n                        placeholder=\"Enter Post Title\"\r\n                        defaultValue={post.title}\r\n                    />\r\n                    <textarea\r\n                        required\r\n                        rows=\"5\"\r\n                        ref={input => this.bodyRef = input}\r\n                        cols=\"28\"\r\n                        placeholder=\"Enter Post\"\r\n                        defaultValue={post.body}\r\n                    />\r\n                    <button>{buttonTitle}</button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nForm.propTypes = {\r\n    editMode: PropTypes.bool,\r\n    post: PropTypes.object\r\n}\r\n\r\nForm.defaultProps = {\r\n    editMode: false,    // false: Create mode, true: Edit mode\r\n    post: {\r\n        title: \"\",\r\n        body: \"\"\r\n    }    // Pass defined Post object in create mode in order not to get undefined objects in 'defaultValue's of inputs.\r\n}\r\n\r\nexport default Form;"]},"metadata":{},"sourceType":"module"}