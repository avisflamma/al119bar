{"ast":null,"code":"import { ORDER_LIST_REQUEST, ORDER_LIST_SUCCESS, ORDER_LIST_FAIL } from \"../Constants/OrderConstants\";\nimport { USER_LOGOUT } from \"../Constants/UserContants\";\nimport axios from \"axios\"; // ALL ADMIN PRODUCTS\n\nexport const listOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_LIST_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/orders/all`, config);\n    dispatch({\n      type: ORDER_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === \"Not authorized, token failed\") {\n      dispatch(USER_LOGOUT());\n    }\n\n    dispatch({\n      type: ORDER_LIST_FAIL,\n      payload: message\n    });\n  }\n};","map":{"version":3,"sources":["/var/www/html/al119bar/dashboard/src/Redux/Actions/OrderActions.js"],"names":["ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","USER_LOGOUT","axios","listOrders","dispatch","getState","type","userLogin","userInfo","config","headers","Authorization","token","data","get","payload","error","message","response"],"mappings":"AAAA,SACIA,kBADJ,EAEIC,kBAFJ,EAGIC,eAHJ,QAIO,6BAJP;AAKA,SAASC,WAAT,QAA4B,2BAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAGA;;AACA,OAAO,MAAMC,UAAU,GAAG,MAAM,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AAC1D,MAAI;AACFD,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAER;AAAR,KAAD,CAAR;AAEA,UAAM;AACJS,MAAAA,SAAS,EAAG;AAAEC,QAAAA;AAAF;AADR,QAEHH,QAAQ,EAFX;AAIA,UAAMI,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAE,UAASH,QAAQ,CAACI,KAAM;AADhC;AADI,KAAf;AAMA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMX,KAAK,CAACY,GAAN,CAAW,iBAAX,EAA6BL,MAA7B,CAAvB;AAEAL,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAEP,kBAAR;AAA4BgB,MAAAA,OAAO,EAAEF;AAArC,KAAD,CAAR;AAED,GAjBD,CAiBE,OAAOG,KAAP,EAAc;AACd,UAAMC,OAAO,GACXD,KAAK,CAACE,QAAN,IAAkBF,KAAK,CAACE,QAAN,CAAeL,IAAf,CAAoBI,OAAtC,GACID,KAAK,CAACE,QAAN,CAAeL,IAAf,CAAoBI,OADxB,GAEID,KAAK,CAACC,OAHZ;;AAIA,QAAIA,OAAO,KAAK,8BAAhB,EAAgD;AAC9Cb,MAAAA,QAAQ,CAACH,WAAW,EAAZ,CAAR;AACD;;AACDG,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAEN,eADC;AAEPe,MAAAA,OAAO,EAAEE;AAFF,KAAD,CAAR;AAID;AACF,CA/BI","sourcesContent":["import {\n    ORDER_LIST_REQUEST,\n    ORDER_LIST_SUCCESS,\n    ORDER_LIST_FAIL\n} from \"../Constants/OrderConstants\";\nimport { USER_LOGOUT } from \"../Constants/UserContants\";\nimport axios from \"axios\";\n\n\n// ALL ADMIN PRODUCTS\nexport const listOrders = () => async (dispatch, getState) => {\n    try {\n      dispatch({ type: ORDER_LIST_REQUEST });\n  \n      const {\n        userLogin : { userInfo },\n      }= getState();\n  \n      const config = {\n        headers: {\n          Authorization:`Bearer ${userInfo.token}`,\n        },\n      };\n  \n      const { data } = await axios.get(`/api/orders/all`, config);\n  \n      dispatch({ type: ORDER_LIST_SUCCESS, payload: data });\n  \n    } catch (error) {\n      const message =\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message;\n      if (message === \"Not authorized, token failed\") {\n        dispatch(USER_LOGOUT());\n      }\n      dispatch({\n        type: ORDER_LIST_FAIL,\n        payload: message,\n      });\n    }\n  };"]},"metadata":{},"sourceType":"module"}