{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { userLoginReducer, userListReducer } from \"./Reducers/userReducers\";\nimport { productCreateReducer, productDeleteReducer, productEditReducer, productListReducer, productUpdateReducer } from \"./Reducers/ProductReducers\";\nimport { orderDeliveredReducer, orderDetailsReducer, orderListReducer } from \"./Reducers/OrderReducres\";\nimport { categoryCreateReducer, categoryDeleteReducer, categoryEditReducer, categoryListReducer, categoryUpdateReducer } from \"./Reducers/CategoryReducers\";\nconst reducer = combineReducers({\n  userLogin: userLoginReducer,\n  userList: userListReducer,\n  productList: productListReducer,\n  productDelete: productDeleteReducer,\n  productCreate: productCreateReducer,\n  productEdit: productEditReducer,\n  productUpdate: productUpdateReducer,\n  categoryList: categoryListReducer,\n  categoryDelete: categoryDeleteReducer,\n  categoryCreate: categoryCreateReducer,\n  categoryEdit: categoryEditReducer,\n  categoryUpdate: categoryUpdateReducer,\n  orderList: orderListReducer,\n  orderDetails: orderDetailsReducer,\n  orderDeliver: orderDeliveredReducer\n}); // login\n\nconst userInfoFromLocalStorage = localStorage.getItem(\"userInfo\") ? JSON.parse(localStorage.getItem(\"userInfo\")) : null;\nconst initialState = {\n  userLogin: {\n    userInfo: userInfoFromLocalStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["/var/www/html/al119bar/dashboard/src/Redux/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","userLoginReducer","userListReducer","productCreateReducer","productDeleteReducer","productEditReducer","productListReducer","productUpdateReducer","orderDeliveredReducer","orderDetailsReducer","orderListReducer","categoryCreateReducer","categoryDeleteReducer","categoryEditReducer","categoryListReducer","categoryUpdateReducer","reducer","userLogin","userList","productList","productDelete","productCreate","productEdit","productUpdate","categoryList","categoryDelete","categoryCreate","categoryEdit","categoryUpdate","orderList","orderDetails","orderDeliver","userInfoFromLocalStorage","localStorage","getItem","JSON","parse","initialState","userInfo","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,gBAAT,EAA4BC,eAA5B,QAAmD,yBAAnD;AACA,SAASC,oBAAT,EAA+BC,oBAA/B,EAAqDC,kBAArD,EAAyEC,kBAAzE,EAA6FC,oBAA7F,QAAyH,4BAAzH;AACA,SAASC,qBAAT,EAAgCC,mBAAhC,EAAqDC,gBAArD,QAA6E,0BAA7E;AACA,SAASC,qBAAT,EAAgCC,qBAAhC,EAAuDC,mBAAvD,EAA4EC,mBAA5E,EAAiGC,qBAAjG,QAA8H,6BAA9H;AAEA,MAAMC,OAAO,GAAGnB,eAAe,CAAC;AAC9BoB,EAAAA,SAAS,EAAEhB,gBADmB;AAE9BiB,EAAAA,QAAQ,EAAGhB,eAFmB;AAG9BiB,EAAAA,WAAW,EAAEb,kBAHiB;AAI9Bc,EAAAA,aAAa,EAAEhB,oBAJe;AAK9BiB,EAAAA,aAAa,EAAElB,oBALe;AAM9BmB,EAAAA,WAAW,EAAEjB,kBANiB;AAO9BkB,EAAAA,aAAa,EAAEhB,oBAPe;AAS9BiB,EAAAA,YAAY,EAAEV,mBATgB;AAU9BW,EAAAA,cAAc,EAAEb,qBAVc;AAW9Bc,EAAAA,cAAc,EAAEf,qBAXc;AAY9BgB,EAAAA,YAAY,EAAEd,mBAZgB;AAa9Be,EAAAA,cAAc,EAAEb,qBAbc;AAe9Bc,EAAAA,SAAS,EAAGnB,gBAfkB;AAgB9BoB,EAAAA,YAAY,EAAErB,mBAhBgB;AAiB9BsB,EAAAA,YAAY,EAAEvB;AAjBgB,CAAD,CAA/B,C,CAoBA;;AACA,MAAMwB,wBAAwB,GAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,IAC7BC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAD6B,GAE7B,IAFJ;AAIA,MAAMG,YAAY,GAAG;AACnBpB,EAAAA,SAAS,EAAE;AAAEqB,IAAAA,QAAQ,EAAEN;AAAZ;AADQ,CAArB;AAIA,MAAMO,UAAU,GAAG,CAACxC,KAAD,CAAnB;AAEA,MAAMyC,KAAK,GAAG5C,WAAW,CACvBoB,OADuB,EAEvBqB,YAFuB,EAGvBrC,mBAAmB,CAACF,eAAe,CAAC,GAAGyC,UAAJ,CAAhB,CAHI,CAAzB;AAMA,eAAeC,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport { userLoginReducer , userListReducer } from \"./Reducers/userReducers\";\r\nimport { productCreateReducer, productDeleteReducer, productEditReducer, productListReducer, productUpdateReducer } from \"./Reducers/ProductReducers\";\r\nimport { orderDeliveredReducer, orderDetailsReducer, orderListReducer } from \"./Reducers/OrderReducres\";\r\nimport { categoryCreateReducer, categoryDeleteReducer, categoryEditReducer, categoryListReducer, categoryUpdateReducer } from \"./Reducers/CategoryReducers\";\r\n\r\nconst reducer = combineReducers({\r\n  userLogin: userLoginReducer,\r\n  userList : userListReducer,\r\n  productList: productListReducer,\r\n  productDelete: productDeleteReducer,\r\n  productCreate: productCreateReducer,\r\n  productEdit: productEditReducer,\r\n  productUpdate: productUpdateReducer,\r\n\r\n  categoryList: categoryListReducer,\r\n  categoryDelete: categoryDeleteReducer,\r\n  categoryCreate: categoryCreateReducer,\r\n  categoryEdit: categoryEditReducer,\r\n  categoryUpdate: categoryUpdateReducer,\r\n\r\n  orderList : orderListReducer,\r\n  orderDetails: orderDetailsReducer,\r\n  orderDeliver: orderDeliveredReducer\r\n});\r\n\r\n// login\r\nconst userInfoFromLocalStorage = localStorage.getItem(\"userInfo\")\r\n  ? JSON.parse(localStorage.getItem(\"userInfo\"))\r\n  : null;\r\n\r\nconst initialState = {\r\n  userLogin: { userInfo: userInfoFromLocalStorage },\r\n};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n"]},"metadata":{},"sourceType":"module"}